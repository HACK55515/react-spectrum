/**
 * Copyright 2025 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0.
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

import {action} from '@storybook/addon-actions';
import {
  ActionMenu,
  Collection,
  Content,
  Heading,
  IllustratedMessage,
  Link,
  MenuItem,
  Text,
  SideNav,
  SideNavItem,
  TreeViewItemContent
} from '../src';
import {categorizeArgTypes} from './utils';
import Delete from '../s2wf-icons/S2_Icon_Delete_20_N.svg';
import Edit from '../s2wf-icons/S2_Icon_Edit_20_N.svg';
import FileTxt from '../s2wf-icons/S2_Icon_FileText_20_N.svg';
import Folder from '../s2wf-icons/S2_Icon_Folder_20_N.svg';
import FolderOpen from '../spectrum-illustrations/linear/FolderOpen';
import type {Meta} from '@storybook/react';
import React from 'react';

let onActionFunc = action('onAction');
let noOnAction = null;
const onActionOptions = {onActionFunc, noOnAction};


const meta: Meta<typeof SideNav> = {
  component: SideNav,
  parameters: {
    layout: 'centered'
  },
  tags: ['autodocs'],
  args: {
    // Make sure onAction isn't autogenerated
    // @ts-ignore
    onAction: null
  },
  argTypes: {
    ...categorizeArgTypes('Events', ['onAction', 'onSelectionChange']),
    onAction: {
      options: Object.keys(onActionOptions), // An array of serializable values
      mapping: onActionOptions, // Maps serializable option values to complex arg values
      control: {
        type: 'select', // Type 'select' is automatically inferred when 'options' is defined
        labels: {
          // 'labels' maps option values to string labels
          onActionFunc: 'onAction enabled',
          noOnAction: 'onAction disabled'
        }
      },
      table: {category: 'Events'}
    }
  }
};

export default meta;


const SideNavExampleStatic = (args) => (
  <div style={{width: '300px', resize: 'both', height: '320px', overflow: 'auto'}}>
    <SideNav
      {...args}
      disabledKeys={['projects-1']}
      aria-label="test static tree"
      onExpandedChange={action('onExpandedChange')}
      onSelectionChange={action('onSelectionChange')}>
      <SideNavItem id="Photos" textValue="Photos">
        Photos
      </SideNavItem>
      <SideNavItem id="projects" textValue="Projects">
        Projects
        <SideNavItem id="projects-1" textValue="Projects-1">
          Projects-1
          <SideNavItem id="projects-1A" textValue="Projects-1A">
            Projects-1A
          </SideNavItem>
        </SideNavItem>
        <SideNavItem id="projects-2" textValue="Projects-2">
          Projects-2
        </SideNavItem>
        <SideNavItem id="projects-3" textValue="Projects-3">
          Project-3
        </SideNavItem>
      </SideNavItem>
    </SideNav>
  </div>
);

export const Example = {
  render: SideNavExampleStatic,
  args: {
    selectionMode: 'multiple'
  }
};
